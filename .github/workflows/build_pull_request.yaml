name: Build Pull Request

on:
  pull_request:
    branches: [master]

  workflow_dispatch:

jobs:
  run_unit_tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest # virtual machine that this will run on
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # make gradlew executable
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Debug Tests
        run: ./gradlew testDebugUnitTest

      - name: Assemble Debug
        run: ./gradlew assembleDebug

      - name: Upload Test Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: '**/build/reports/tests/'

  assemble_debug_apk:
    name: Assemble debug APK
    runs-on: ubuntu-latest # virtual machine that this will run on
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # make gradlew executable
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Assemble Debug
        run: ./gradlew assembleDebug

      - name: Upload DEBUG APK
        uses: actions/upload-artifact@v2
        with:
          name: apk
          path: app/build/outputs/apk/debug/**.apk
